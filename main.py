
# # Дан список чисел. Определите, сколько в нем
# # встречается различных чисел.
# # Input: [1, 1, 2, 0, -1, 3, 4, 4]
# # Output: 6

# lists = [1, 1, 2, 0, -1, 3, 4, 4]
# unique_numbers = set(lists)  
# count = len(unique_numbers)  
# print(count)
# # Преобразуем список в множество и подсчитываем количество элементов в множестве

# Задача №19. Решение в группах
# Дана последовательность из N целых чисел и число
# K. Необходимо сдвинуть всю последовательность
# (сдвиг - циклический) на K элементов вправо, K –
# положительное число.
# Input: [1, 2, 3, 4, 5] k = 3
# Output: [4, 5, 1, 2, 3]

# def shift(lst, k):
#     n = len(lst) 
#     k = k % n  
#     return lst[-k+1:] + lst[:-k+1] if k != 0 else lst

# input_list = [1, 2, 3, 4, 5]
# k = 3
# output_list = shift(input_list, k)
# print(output_list)
# # определяем длинну списка
# # если когда k больше длины списка
# # возвращем список состоящий из последних К элементов и все остальные элементы до последних К (+1 почему, без него результат [3, 4, 5, 1, 2])

# Напишите программу для печати всех уникальных
# значений в словаре.
# Input: [{"V": "S001"}, {"V": "S002"}, {"VI": "S001"},
# {"VI": "S005"}, {"VII": " S005 "}, {" V ":" S009 "}, {" VIII
# ":" S007 "}]
# Output: {'S005', 'S002', 'S007', 'S001', 'S009'}

# dictionary = [{"V": "S001"}, {"V": "S002"}, {"VI": "S001"}, {"VI": "S005"}, {"VII" : "S005"}, {"V" : "S009"}, {"VIII#" : "S007"}]
# unique = set()

# for item in dictionary:
#     for value in item.values():
#         unique.add(value)
# print(unique)

# # создаем пустое множество, проходим по каждму словарю в списке, в каждому значению в текущем словаре
# # добавляем значение в множество уникальных значений

# Задача №23. Решение в группах
# Дан массив, состоящий из целых чисел. Напишите
# программу, которая подсчитает количество
# элементов массива, больших предыдущего (элемента
# с предыдущим номером)
# Input: [0, -1, 5, 2, 3]
# Output: 2 (-1 < 5, 2 < 3)

# a = [0, -1, 5, 2, 3]
# count = 0
# for i in range(1, len(a)):
#     if a[i] > a[i - 1]:
#         count += 1
# print(count)
# # Цикл проходит по индексам массива, начиная с индекса 1, проверяет больше ли текущий элемент, чем предыдущий.